name: Android 32-bit testing

on: [push]


defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     QOpenHD_32.apk
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: fix ci
        run: sudo apt-mark hold grub-efi-amd64-signed

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         linux
          target:       android
          dir:          ${{ runner.temp }}
          modules:      qtcharts
          setup-python: true

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false

      - name: Install ccache
        run:  sudo apt-get install ccache

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path:         ~/.ccache
          key:          ${{ runner.os }}-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 5" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name:               Install gstreamer
        working-directory:  ${{ github.workspace }}
        run: |
          cd lib/gstreamer_prebuilts/
          ./fetch_extract_locally.sh

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_LATEST_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
        run:  |
          qmake ${SOURCE_DIR}/QOpenHD.pro ANDROID_ABIS="arm64-v8a" -spec android-clang CONFIG+=installer
          make -j$(($(nproc)/2)) qmake_all
          make -j12
          make install INSTALL_ROOT=android
          /home/runner/work/_temp/Qt/5.15.2/android/bin/androiddeployqt --output android --verbose --input android-QOpenHD-deployment-settings.json  --android-platform android-33 --gradle
          
          
          zip -r file.zip .

      - name: ccache post-run
        run:  ccache -s

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/android/build/outputs/apk/debug/*.apk

